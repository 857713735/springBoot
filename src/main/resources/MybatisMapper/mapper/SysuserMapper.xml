<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kl.springboot.demo.dao.SysuserMapper" >
  <resultMap id="BaseResultMap" type="kl.springboot.demo.entity.Sysuser" >
    <id column="userId" property="userid" jdbcType="VARCHAR" />
    <result column="loginName" property="loginname" jdbcType="VARCHAR" />
    <result column="userName" property="username" jdbcType="VARCHAR" />
    <result column="userType" property="usertype" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="phonenumber" property="phonenumber" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="imageurl" property="imageurl" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="loginIp" property="loginip" jdbcType="VARCHAR" />
    <result column="loginDate" property="logindate" jdbcType="DATE" />
    <result column="createBy" property="createby" jdbcType="VARCHAR" />
    <result column="createTime" property="createtime" jdbcType="DATE" />
    <result column="updateBy" property="updateby" jdbcType="VARCHAR" />
    <result column="updateTime" property="updatetime" jdbcType="DATE" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    userId, loginName, userName, userType, email, phonenumber, sex, imageurl, password, 
    status, loginIp, loginDate, createBy, createTime, updateBy, updateTime, remark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="kl.springboot.demo.entity.SysuserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sysuser
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from sysuser
    where userId = #{userid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from sysuser
    where userId = #{userid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="kl.springboot.demo.entity.SysuserExample" >
    delete from sysuser
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="kl.springboot.demo.entity.Sysuser" >
    insert into sysuser (userId, loginName, userName, 
      userType, email, phonenumber, 
      sex, imageurl, password, 
      status, loginIp, loginDate, 
      createBy, createTime, updateBy, 
      updateTime, remark)
    values (#{userid,jdbcType=VARCHAR}, #{loginname,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{usertype,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{phonenumber,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{imageurl,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{loginip,jdbcType=VARCHAR}, #{logindate,jdbcType=DATE}, 
      #{createby,jdbcType=VARCHAR}, #{createtime,jdbcType=DATE}, #{updateby,jdbcType=VARCHAR}, 
      #{updatetime,jdbcType=DATE}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="kl.springboot.demo.entity.Sysuser" >
    insert into sysuser
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userId,
      </if>
      <if test="loginname != null" >
        loginName,
      </if>
      <if test="username != null" >
        userName,
      </if>
      <if test="usertype != null" >
        userType,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="phonenumber != null" >
        phonenumber,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="imageurl != null" >
        imageurl,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="loginip != null" >
        loginIp,
      </if>
      <if test="logindate != null" >
        loginDate,
      </if>
      <if test="createby != null" >
        createBy,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="updateby != null" >
        updateBy,
      </if>
      <if test="updatetime != null" >
        updateTime,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="loginname != null" >
        #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="usertype != null" >
        #{usertype,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phonenumber != null" >
        #{phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="imageurl != null" >
        #{imageurl,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="loginip != null" >
        #{loginip,jdbcType=VARCHAR},
      </if>
      <if test="logindate != null" >
        #{logindate,jdbcType=DATE},
      </if>
      <if test="createby != null" >
        #{createby,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=DATE},
      </if>
      <if test="updateby != null" >
        #{updateby,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=DATE},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="kl.springboot.demo.entity.SysuserExample" resultType="java.lang.Integer" >
    select count(*) from sysuser
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sysuser
    <set >
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.loginname != null" >
        loginName = #{record.loginname,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null" >
        userName = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.usertype != null" >
        userType = #{record.usertype,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.phonenumber != null" >
        phonenumber = #{record.phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.imageurl != null" >
        imageurl = #{record.imageurl,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.loginip != null" >
        loginIp = #{record.loginip,jdbcType=VARCHAR},
      </if>
      <if test="record.logindate != null" >
        loginDate = #{record.logindate,jdbcType=DATE},
      </if>
      <if test="record.createby != null" >
        createBy = #{record.createby,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null" >
        createTime = #{record.createtime,jdbcType=DATE},
      </if>
      <if test="record.updateby != null" >
        updateBy = #{record.updateby,jdbcType=VARCHAR},
      </if>
      <if test="record.updatetime != null" >
        updateTime = #{record.updatetime,jdbcType=DATE},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sysuser
    set userId = #{record.userid,jdbcType=VARCHAR},
      loginName = #{record.loginname,jdbcType=VARCHAR},
      userName = #{record.username,jdbcType=VARCHAR},
      userType = #{record.usertype,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      phonenumber = #{record.phonenumber,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      imageurl = #{record.imageurl,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      loginIp = #{record.loginip,jdbcType=VARCHAR},
      loginDate = #{record.logindate,jdbcType=DATE},
      createBy = #{record.createby,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=DATE},
      updateBy = #{record.updateby,jdbcType=VARCHAR},
      updateTime = #{record.updatetime,jdbcType=DATE},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="kl.springboot.demo.entity.Sysuser" >
    update sysuser
    <set >
      <if test="loginname != null" >
        loginName = #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="usertype != null" >
        userType = #{usertype,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phonenumber != null" >
        phonenumber = #{phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="imageurl != null" >
        imageurl = #{imageurl,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="loginip != null" >
        loginIp = #{loginip,jdbcType=VARCHAR},
      </if>
      <if test="logindate != null" >
        loginDate = #{logindate,jdbcType=DATE},
      </if>
      <if test="createby != null" >
        createBy = #{createby,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=DATE},
      </if>
      <if test="updateby != null" >
        updateBy = #{updateby,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null" >
        updateTime = #{updatetime,jdbcType=DATE},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where userId = #{userid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="kl.springboot.demo.entity.Sysuser" >
    update sysuser
    set loginName = #{loginname,jdbcType=VARCHAR},
      userName = #{username,jdbcType=VARCHAR},
      userType = #{usertype,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phonenumber = #{phonenumber,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      imageurl = #{imageurl,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      loginIp = #{loginip,jdbcType=VARCHAR},
      loginDate = #{logindate,jdbcType=DATE},
      createBy = #{createby,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=DATE},
      updateBy = #{updateby,jdbcType=VARCHAR},
      updateTime = #{updatetime,jdbcType=DATE},
      remark = #{remark,jdbcType=VARCHAR}
    where userId = #{userid,jdbcType=VARCHAR}
  </update>
</mapper>